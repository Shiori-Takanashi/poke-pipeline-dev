# generated by datamodel-codegen:
#   filename:  p488.json
#   timestamp: 2025-06-24T00:10:01+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class Ability1(BaseModel):
    name: str
    url: str


class Ability(BaseModel):
    ability: Ability1
    is_hidden: bool
    slot: int


class Cries(BaseModel):
    latest: str
    legacy: str


class Form(BaseModel):
    name: str
    url: str


class Version(BaseModel):
    name: str
    url: str


class GameIndice(BaseModel):
    game_index: int
    version: Version


class Move1(BaseModel):
    name: str
    url: str


class MoveLearnMethod(BaseModel):
    name: str
    url: str


class VersionGroup(BaseModel):
    name: str
    url: str


class VersionGroupDetail(BaseModel):
    level_learned_at: int
    move_learn_method: MoveLearnMethod
    order: Optional[int]
    version_group: VersionGroup


class Move(BaseModel):
    move: Move1
    version_group_details: List[VersionGroupDetail]


class Species(BaseModel):
    name: str
    url: str


class DreamWorld(BaseModel):
    front_default: str
    front_female: None


class Home(BaseModel):
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class OfficialArtwork(BaseModel):
    front_default: str
    front_shiny: str


class Showdown(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class Other(BaseModel):
    dream_world: DreamWorld
    home: Home
    official_artwork: OfficialArtwork = Field(..., alias='official-artwork')
    showdown: Showdown


class RedBlue(BaseModel):
    back_default: None
    back_gray: None
    back_transparent: None
    front_default: None
    front_gray: None
    front_transparent: None


class Yellow(BaseModel):
    back_default: None
    back_gray: None
    back_transparent: None
    front_default: None
    front_gray: None
    front_transparent: None


class GenerationI(BaseModel):
    red_blue: RedBlue = Field(..., alias='red-blue')
    yellow: Yellow


class Crystal(BaseModel):
    back_default: None
    back_shiny: None
    back_shiny_transparent: None
    back_transparent: None
    front_default: None
    front_shiny: None
    front_shiny_transparent: None
    front_transparent: None


class Gold(BaseModel):
    back_default: None
    back_shiny: None
    front_default: None
    front_shiny: None
    front_transparent: None


class Silver(BaseModel):
    back_default: None
    back_shiny: None
    front_default: None
    front_shiny: None
    front_transparent: None


class GenerationIi(BaseModel):
    crystal: Crystal
    gold: Gold
    silver: Silver


class Emerald(BaseModel):
    front_default: None
    front_shiny: None


class FireredLeafgreen(BaseModel):
    back_default: None
    back_shiny: None
    front_default: None
    front_shiny: None


class RubySapphire(BaseModel):
    back_default: None
    back_shiny: None
    front_default: None
    front_shiny: None


class GenerationIii(BaseModel):
    emerald: Emerald
    firered_leafgreen: FireredLeafgreen = Field(..., alias='firered-leafgreen')
    ruby_sapphire: RubySapphire = Field(..., alias='ruby-sapphire')


class DiamondPearl(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class HeartgoldSoulsilver(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class Platinum(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class GenerationIv(BaseModel):
    diamond_pearl: DiamondPearl = Field(..., alias='diamond-pearl')
    heartgold_soulsilver: HeartgoldSoulsilver = Field(..., alias='heartgold-soulsilver')
    platinum: Platinum


class Animated(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class BlackWhite(BaseModel):
    animated: Animated
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class GenerationV(BaseModel):
    black_white: BlackWhite = Field(..., alias='black-white')


class OmegarubyAlphasapphire(BaseModel):
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class XY(BaseModel):
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class GenerationVi(BaseModel):
    omegaruby_alphasapphire: OmegarubyAlphasapphire = Field(
        ..., alias='omegaruby-alphasapphire'
    )
    x_y: XY = Field(..., alias='x-y')


class Icons(BaseModel):
    front_default: str
    front_female: None


class UltraSunUltraMoon(BaseModel):
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None


class GenerationVii(BaseModel):
    icons: Icons
    ultra_sun_ultra_moon: UltraSunUltraMoon = Field(..., alias='ultra-sun-ultra-moon')


class GenerationViii(BaseModel):
    icons: Icons


class Versions(BaseModel):
    generation_i: GenerationI = Field(..., alias='generation-i')
    generation_ii: GenerationIi = Field(..., alias='generation-ii')
    generation_iii: GenerationIii = Field(..., alias='generation-iii')
    generation_iv: GenerationIv = Field(..., alias='generation-iv')
    generation_v: GenerationV = Field(..., alias='generation-v')
    generation_vi: GenerationVi = Field(..., alias='generation-vi')
    generation_vii: GenerationVii = Field(..., alias='generation-vii')
    generation_viii: GenerationViii = Field(..., alias='generation-viii')


class Sprites(BaseModel):
    back_default: str
    back_female: None
    back_shiny: str
    back_shiny_female: None
    front_default: str
    front_female: None
    front_shiny: str
    front_shiny_female: None
    other: Other
    versions: Versions


class Stat1(BaseModel):
    name: str
    url: str


class Stat(BaseModel):
    base_stat: int
    effort: int
    stat: Stat1


class Type1(BaseModel):
    name: str
    url: str


class Type(BaseModel):
    slot: int
    type: Type1


class Pokemon(BaseModel):
    abilities: List[Ability]
    base_experience: int
    cries: Cries
    forms: List[Form]
    game_indices: List[GameIndice]
    height: int
    held_items: List
    id: int
    is_default: bool
    location_area_encounters: str
    moves: List[Move]
    name: str
    order: int
    past_abilities: List
    past_types: List
    species: Species
    sprites: Sprites
    stats: List[Stat]
    types: List[Type]
    weight: int
